{"version":3,"sources":["components/Letter.js","App.js","serviceWorker.js","index.js"],"names":["Letter","className","GridBackground","LetterY","Component","LineGrid","cubeElement","i","push","key","delay","anime","stagger","grid","from","translateX","axis","translateY","rotateZ","easing","opacity","loop","autoplay","duration","direction","line","rotate","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57229d6e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Anime, { anime } from 'react-anime';\n\nexport default class Letter extends Component {\n    render() {\n        return (\n            <div className=\"row w-100 justify-content-center align-items-center m-auto\">\n                <div className=\"col-12 App-header\">\n                    <div className=\"background-cover position-absolute\">\n                        <GridBackground></GridBackground>\n                    </div>\n                <LetterY></LetterY>\n                </div>\n            </div>\n        )\n    }\n}\nfunction LineGrid() {\n    let cubeElement = []\n    let cubes = 22;\n    for(let i = 0; i < cubes; i++) {\n        cubeElement.push(<div className=\"small-block-grid\" key={i}></div>)\n    }\n    return (\n        <div className=\"col-12 d-flex justify-content-center align-items-center\">\n            <Anime delay={anime.stagger(100, {grid: [cubes, 5], from: 'center'})}\n                    translateX={anime.stagger(10, {grid: [cubes, 5], from: 'center', axis: 'x'})}\n                    translateY={anime.stagger(10, {grid: [cubes, 5], from :'center', axis: 'y'})}\n                    rotateZ={anime.stagger([0, 90], {grid: [cubes, 5], from: 'center', axis: 'x'})}\n                    easing={'easeInOutCirc'}\n                    opacity={[1, 0]}\n                    loop={true}\n                    autoplay={true}\n                    duration={1350}\n                    direction={'alternate'}\n            >\n                {cubeElement}\n            </Anime>\n        </div>\n    )\n}\n\nfunction GridBackground() {\n    let line = []\n    for(let i = 0; i < 12; i++) {\n        line.push(<LineGrid key={i}></LineGrid>)\n    }\n    return (\n        <div className=\"row w-100 justify-content-center align-items-center m-auto\">\n            {line}\n        </div>\n    )\n}\n\nfunction LetterY() {\n    return (\n        <div className=\"row w-100 justify-content-center align-items-center\">\n            <div className=\"col-12\">\n                <Anime delay={anime.stagger(100)}\n                        rotate={[0, 360]}\n                        autoplay={true}\n                        easing={'easeInOutCirc'}\n                        loop={true}\n                        direction={'alternate'}\n                        duration={1000}\n                        opacity={[0, 1]}\n                        >\n                    {/* TOP OF Y */}\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"angled-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"angled-block-opposite\"></div>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"angled-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"angled-block-opposite\"></div>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"angled-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"angled-block-opposite\"></div>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"angled-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"angled-block-opposite\"></div>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"angled-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"angled-block-opposite\"></div>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"angled-block\"></div>\n                        <div className=\"transparent-block\"></div>\n                        <div className=\"angled-block-opposite\"></div>\n                    </div>\n\n                    {/* CENTER CONNECTING TOP AND STEM */}\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"block-center\"></div>\n                        <div className=\"block-center-opposite\"></div>\n                    </div>\n                    <div className=\"d-flex justify-content-center position-relative\">\n                        <div className=\"block-small-center position-absolute\"></div>\n                    </div>\n\n                    {/* STEM OF Y */}\n                    {/* <div className=\"d-block\"> */}\n                        <div className=\"block m-auto\"></div>\n                        <div className=\"block m-auto\"></div>\n                        <div className=\"block m-auto\"></div>\n                        <div className=\"block m-auto\"></div>\n                        <div className=\"block m-auto\"></div>\n                        <div className=\"block m-auto\"></div>\n                        <div className=\"block m-auto\"></div>\n                    {/* </div> */}\n                </Anime>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport Letter from './components/Letter'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Letter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'assets/css/index.scss';\nimport App from './App';\nimport 'assets/css/App.scss'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}